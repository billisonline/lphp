name: Multi-OS Build Test

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        config:
          - os_type: macos
            os_display_name: macOS
            runner: macos-latest
          - os_type: linux
            os_display_name: Linux (glibc)
            runner: ubuntu-latest

    runs-on: ${{ matrix.config.runner }}
    permissions:
      contents: read
    outputs:
      php_artifact_name: php-${{ matrix.config.os_type }}.zip

    steps:
      - uses: actions/checkout@v4

      - name: Build PHP for ${{ matrix.config.os_display_name }}
        run: ./ci/build-php-${{ matrix.config.os_type }}.sh

      - name: Archive PHP build for ${{ matrix.config.os_display_name }}
        uses: actions/upload-artifact@v4
        with:
          name: php-${{ matrix.config.os_type }}
          path: ./build/output/php-${{ matrix.config.os_type }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      RELEASE: '0.04'
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Delete release if it already exists
        run: |
          gh release list --json tagName -q '.[] | .tagName' | grep -xqF ${{ env.RELEASE }} \
            && gh release delete ${{ env.RELEASE }} \
            || echo "No existing release ${{ env.RELEASE }}"

      - name: Create release
        run: gh release create ${{ env.RELEASE }}

      - name: Download all PHP build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build/artifacts

      - name: Upload all PHP builds to release
        run: |
          gh release upload ${{ env.RELEASE }} ./build/artifacts/**/php-*.zip

      - name: Generate installer patch template
        run: ./ci/generate-installer-patch.sh > ./templates/install-vphp.patch

      - name: Build VPHP runner, installer, and patch from templates
        run: |
          sed "s|__CURRENT_RELEASE__|$RELEASE|g" ./templates/vphp > ./build/output/vphp
          sed "s|__CURRENT_RELEASE__|$RELEASE|g" ./templates/install-vphp > ./build/output/install-vphp
          sed "s|__CURRENT_RELEASE__|$RELEASE|g" ./templates/install-vphp.patch > ./build/output/install-vphp.patch

      - name: Add VPHP, installer script, and installer patch to release
        run: |
          gh release upload ${{ env.RELEASE }} \
            ./build/output/vphp \
            ./build/output/install-vphp \
            ./build/output/install-vphp.patch
